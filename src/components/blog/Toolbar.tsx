'use client';
import * as React from 'react';

type ToolbarProps = {
  onCmd?: (cmd: string, value?: string) => void;
  onInsertHtml?: (html: string) => void;
  onPickImage?: () => void;
  onPickVideo?: () => void;
  onEmbed?: () => void;
};

function Btn({ title, onClick, children }: any) {
  return (
    <button type="button" title={title} onClick={onClick}
      className="inline-flex items-center justify-center h-10 px-3 rounded-lg text-[#111] hover:bg-gray-100">
      {children}
    </button>
  );
}

export default function Toolbar({ onCmd, onInsertHtml, onPickImage, onPickVideo, onEmbed }: ToolbarProps) {
  const run = (cmd: string, value?: string) => () => onCmd?.(cmd, value);

  const block = (tag: 'p'|'h1'|'h2'|'h3') => () => {
    // formatBlock —Ç—Ä–µ–±—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ '<h1>'
    const map = { p:'<p>', h1:'<h1>', h2:'<h2>', h3:'<h3>' } as const;
    onCmd?.('formatBlock', map[tag]);
  };

  const addQuote = () => onInsertHtml?.(
    '<blockquote style="border-left:4px solid #e5e7eb;padding:8px 12px;color:#374151;margin:12px 0;border-radius:8px">–¶–∏—Ç–∞—Ç–∞</blockquote>'
  );
  const addCode  = () => onInsertHtml?.(
    '<pre style="background:#0b1020;color:#f8fafc;padding:12px 14px;border-radius:12px;overflow:auto"><code>// –∫–æ–¥</code></pre>'
  );

  const addCaptionedImage = () => {
    const caption = prompt('–ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)') || '';
    // –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –≤–æ –≤–Ω–µ—à–Ω–∏–π —Ö–µ–Ω–¥–ª–µ—Ä
    onPickImage?.();
    // –ø–æ–¥–ø–∏—Å—å –¥–æ–±–∞–≤–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π, –Ω–æ —É–¥–æ–±–Ω–µ–µ —Å—Ä–∞–∑—É –∏–º–µ—Ç—å —à–∞–±–ª–æ–Ω:
    if (caption) {
      onInsertHtml?.(`<div style="text-align:center;color:#6b7280;font-size:14px;margin-top:6px">${caption}</div>`);
    }
  };

  return (
    <div className="w-full bg-white border border-gray-200 rounded-2xl p-1 flex items-center flex-wrap gap-1">
      <div className="flex items-center rounded-xl bg-gray-50 px-1">
        <Btn title="–ñ–∏—Ä–Ω—ã–π" onClick={run('bold')}><b>B</b></Btn>
        <Btn title="–ö—É—Ä—Å–∏–≤" onClick={run('italic')}><i>I</i></Btn>
        <Btn title="–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π" onClick={run('underline')}><u>U</u></Btn>
        <Btn title="–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π" onClick={run('strikeThrough')}><s>S</s></Btn>
      </div>

      <div className="flex items-center rounded-xl bg-gray-50 px-1">
        <Btn title="–ê–±–∑–∞—Ü" onClick={block('p')}>P</Btn>
        <Btn title="H1" onClick={block('h1')}>H1</Btn>
        <Btn title="H2" onClick={block('h2')}>H2</Btn>
        <Btn title="H3" onClick={block('h3')}>H3</Btn>
        <Btn title="–¶–∏—Ç–∞—Ç–∞" onClick={addQuote}>‚ùù</Btn>
        <Btn title="–ö–æ–¥" onClick={addCode}>{'</>'}</Btn>
      </div>

      <div className="flex items-center rounded-xl bg-gray-50 px-1">
        <Btn title="–°–ø–∏—Å–æ–∫" onClick={run('insertUnorderedList')}>‚Ä¢ List</Btn>
        <Btn title="–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π" onClick={run('insertOrderedList')}>1. List</Btn>
      </div>

      <div className="flex items-center rounded-xl bg-gray-50 px-1">
        <Btn title="–í—ã—Ä–æ–≤–Ω—è—Ç—å —Å–ª–µ–≤–∞" onClick={run('justifyLeft')}>‚ü∏</Btn>
        <Btn title="–ü–æ —Ü–µ–Ω—Ç—Ä—É" onClick={run('justifyCenter')}>‚áî</Btn>
        <Btn title="–í—ã—Ä–æ–≤–Ω—è—Ç—å —Å–ø—Ä–∞–≤–∞" onClick={run('justifyRight')}>‚üπ</Btn>
      </div>

      <div className="flex items-center rounded-xl bg-gray-50 px-1">
        <Btn title="–°—Å—ã–ª–∫–∞" onClick={()=>{
          const url = prompt('–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É (https://...)'); if(!url) return;
          onCmd?.('createLink', url);
          onInsertHtml?.(`<a href="${url}" target="_blank" rel="noopener noreferrer">${url}</a>`);
        }}>üîó</Btn>
        <Btn title="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ + –ø–æ–¥–ø–∏—Å—å" onClick={addCaptionedImage}>üñºÔ∏è+</Btn>
        <Btn title="–í–∏–¥–µ–æ (—Ñ–∞–π–ª)" onClick={onPickVideo}>üé¨</Btn>
        <Btn title="–í—Å—Ç–∞–≤–∏—Ç—å embed" onClick={onEmbed}>‚§¥Ô∏é</Btn>
      </div>

      <div className="ml-auto flex items-center rounded-xl bg-gray-50 px-1">
        <Btn title="–û—Ç–º–µ–Ω–∏—Ç—å" onClick={run('undo')}>‚Ü∂</Btn>
        <Btn title="–ü–æ–≤—Ç–æ—Ä–∏—Ç—å" onClick={run('redo')}>‚Ü∑</Btn>
        <Btn title="–û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" onClick={run('removeFormat')}>‚å´</Btn>
      </div>
    </div>
  );
}
